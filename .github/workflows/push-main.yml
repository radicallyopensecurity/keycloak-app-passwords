name: Release

on:
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: push-main
  cancel-in-progress: true

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.next-version.outputs.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Pyhon
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Commitizen
        run: ./.internal/ci/install-cz.sh
      - name: Determine Next Version
        id: next-version
        run: echo "version=$(./.internal/ci/version-next.sh)" >> $GITHUB_OUTPUT

  build-theme:
    name: Build Theme
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.version != ''
    env:
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cache NPM
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Build
        run: ./.internal/ci/build-theme.sh

  build-extension:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.version != ''
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build & Test
        run: ./.internal/ci/build-extension.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [version, build-theme, build-extension]
    if: needs.version.outputs.version != ''
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Configure Git User
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Setup Pyhon
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Commitizen
        run: ./.internal/ci/install-cz.sh
      - name: Bump Version
        env:
          NEXT_VERSION: ${{ needs.version.outputs.version }}
        run: ./.internal/ci/version-bump.sh "$NEXT_VERSION"
      - name: Push
        run: git push && git push --tags && exit 0
